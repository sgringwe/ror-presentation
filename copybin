rails generate scaffold post title:string body:text author:string published:boolean published_date:datetime

rake db:migrate
rake db:test:load
rake db:test:prepare

  test "should not save post without title" do
    post = posts(:one)
    post.title = nil
    assert !post.save
  end

rake test

validates :title, presence: true

rake test

  test "the publish_post method sets the published attribute to true" do
    post = posts(:one)
    post.publish_post
    assert post.published
  end

rake test

  def publish_post
    update(published: true)
  end

rake test

  test "the publish_post method sets the published_date attribute to current date time" do
    post = posts(:one)
    post.publish_post
    assert_equal post.published_date.to_i, DateTime.now.utc.to_i
  end

rake test
  
  update(published: true, published_date: DateTime.now.utc)

rake test


### controller
@posts = Post.all.order(published_date: :desc)

gem 'paperclip' <---- Gemfile

Let's turn this into a photo blog. All posts must have a photo attached

rails g migration add_photos_to_posts

add_attachment :posts, :photo
rake db:migrate

has_attached_file :photo, :styles => { :medium => "300x300>", :thumb => "100x100>" }, :default_url => "/images/:style/missing.png"
validates_attachment_content_type :photo, :content_type => /\Aimage\/.*\Z/

params.require(:post).permit(:title, :body, :author, :published, :published_date, :photo)

  <div class="form-group">
    <%= f.label :photo %><br>
    <%= f.file_field :photo %>
  </div>



heroku apps:create